# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from fkie_multimaster_msgs.grpc import file_pb2 as fkie__multimaster__msgs_dot_grpc_dot_file__pb2


class FileServiceStub(object):
    """* The file manager service definition. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetFileContent = channel.unary_stream(
                '/fkie_multimaster_msgs.file.FileService/GetFileContent',
                request_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.GetFileContentRequest.SerializeToString,
                response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.GetFileContentReply.FromString,
                )
        self.SaveFileContent = channel.stream_stream(
                '/fkie_multimaster_msgs.file.FileService/SaveFileContent',
                request_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.SaveFileContentRequest.SerializeToString,
                response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.SaveFileContentReply.FromString,
                )
        self.CopyFileTo = channel.unary_unary(
                '/fkie_multimaster_msgs.file.FileService/CopyFileTo',
                request_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.CopyToRequest.SerializeToString,
                response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ReturnStatus.FromString,
                )
        self.Rename = channel.unary_unary(
                '/fkie_multimaster_msgs.file.FileService/Rename',
                request_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.RenameRequest.SerializeToString,
                response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ReturnStatus.FromString,
                )
        self.ListPath = channel.unary_unary(
                '/fkie_multimaster_msgs.file.FileService/ListPath',
                request_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ListPathRequest.SerializeToString,
                response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ListPathReply.FromString,
                )
        self.ListPackages = channel.unary_unary(
                '/fkie_multimaster_msgs.file.FileService/ListPackages',
                request_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ListPackagesRequest.SerializeToString,
                response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ListPackagesReply.FromString,
                )
        self.ChangedFiles = channel.unary_unary(
                '/fkie_multimaster_msgs.file.FileService/ChangedFiles',
                request_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PathList.SerializeToString,
                response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PathList.FromString,
                )
        self.GetPackageBinaries = channel.unary_unary(
                '/fkie_multimaster_msgs.file.FileService/GetPackageBinaries',
                request_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PackageObj.SerializeToString,
                response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PathList.FromString,
                )
        self.Delete = channel.unary_unary(
                '/fkie_multimaster_msgs.file.FileService/Delete',
                request_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PathObj.SerializeToString,
                response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ReturnStatus.FromString,
                )
        self.New = channel.unary_unary(
                '/fkie_multimaster_msgs.file.FileService/New',
                request_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PathObj.SerializeToString,
                response_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ReturnStatus.FromString,
                )


class FileServiceServicer(object):
    """* The file manager service definition. 
    """

    def GetFileContent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveFileContent(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CopyFileTo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Rename(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPath(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPackages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangedFiles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPackageBinaries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def New(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FileServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetFileContent': grpc.unary_stream_rpc_method_handler(
                    servicer.GetFileContent,
                    request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.GetFileContentRequest.FromString,
                    response_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.GetFileContentReply.SerializeToString,
            ),
            'SaveFileContent': grpc.stream_stream_rpc_method_handler(
                    servicer.SaveFileContent,
                    request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.SaveFileContentRequest.FromString,
                    response_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.SaveFileContentReply.SerializeToString,
            ),
            'CopyFileTo': grpc.unary_unary_rpc_method_handler(
                    servicer.CopyFileTo,
                    request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.CopyToRequest.FromString,
                    response_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ReturnStatus.SerializeToString,
            ),
            'Rename': grpc.unary_unary_rpc_method_handler(
                    servicer.Rename,
                    request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.RenameRequest.FromString,
                    response_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ReturnStatus.SerializeToString,
            ),
            'ListPath': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPath,
                    request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ListPathRequest.FromString,
                    response_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ListPathReply.SerializeToString,
            ),
            'ListPackages': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPackages,
                    request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ListPackagesRequest.FromString,
                    response_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ListPackagesReply.SerializeToString,
            ),
            'ChangedFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangedFiles,
                    request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PathList.FromString,
                    response_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PathList.SerializeToString,
            ),
            'GetPackageBinaries': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPackageBinaries,
                    request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PackageObj.FromString,
                    response_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PathList.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PathObj.FromString,
                    response_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ReturnStatus.SerializeToString,
            ),
            'New': grpc.unary_unary_rpc_method_handler(
                    servicer.New,
                    request_deserializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PathObj.FromString,
                    response_serializer=fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ReturnStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'fkie_multimaster_msgs.file.FileService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FileService(object):
    """* The file manager service definition. 
    """

    @staticmethod
    def GetFileContent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/fkie_multimaster_msgs.file.FileService/GetFileContent',
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.GetFileContentRequest.SerializeToString,
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.GetFileContentReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SaveFileContent(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/fkie_multimaster_msgs.file.FileService/SaveFileContent',
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.SaveFileContentRequest.SerializeToString,
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.SaveFileContentReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CopyFileTo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fkie_multimaster_msgs.file.FileService/CopyFileTo',
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.CopyToRequest.SerializeToString,
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ReturnStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Rename(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fkie_multimaster_msgs.file.FileService/Rename',
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.RenameRequest.SerializeToString,
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ReturnStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPath(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fkie_multimaster_msgs.file.FileService/ListPath',
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ListPathRequest.SerializeToString,
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ListPathReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPackages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fkie_multimaster_msgs.file.FileService/ListPackages',
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ListPackagesRequest.SerializeToString,
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ListPackagesReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangedFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fkie_multimaster_msgs.file.FileService/ChangedFiles',
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PathList.SerializeToString,
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PathList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPackageBinaries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fkie_multimaster_msgs.file.FileService/GetPackageBinaries',
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PackageObj.SerializeToString,
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PathList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fkie_multimaster_msgs.file.FileService/Delete',
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PathObj.SerializeToString,
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ReturnStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def New(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fkie_multimaster_msgs.file.FileService/New',
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.PathObj.SerializeToString,
            fkie__multimaster__msgs_dot_grpc_dot_file__pb2.ReturnStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
