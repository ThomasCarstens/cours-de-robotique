;; Auto-generated. Do not edit!


(when (boundp 'actionlib_tutorials::FibonacciGoal)
  (if (not (find-package "ACTIONLIB_TUTORIALS"))
    (make-package "ACTIONLIB_TUTORIALS"))
  (shadow 'FibonacciGoal (find-package "ACTIONLIB_TUTORIALS")))
(unless (find-package "ACTIONLIB_TUTORIALS::FIBONACCIGOAL")
  (make-package "ACTIONLIB_TUTORIALS::FIBONACCIGOAL"))

(in-package "ROS")
;;//! \htmlinclude FibonacciGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass actionlib_tutorials::FibonacciGoal
  :super ros::object
  :slots (_destination _order ))

(defmethod actionlib_tutorials::FibonacciGoal
  (:init
   (&key
    ((:destination __destination) (instance geometry_msgs::Point :init))
    ((:order __order) 0)
    )
   (send-super :init)
   (setq _destination __destination)
   (setq _order (round __order))
   self)
  (:destination
   (&rest __destination)
   (if (keywordp (car __destination))
       (send* _destination __destination)
     (progn
       (if __destination (setq _destination (car __destination)))
       _destination)))
  (:order
   (&optional __order)
   (if __order (setq _order __order)) _order)
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/Point _destination
    (send _destination :serialization-length)
    ;; uint32 _order
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/Point _destination
       (send _destination :serialize s)
     ;; uint32 _order
       (write-long _order s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/Point _destination
     (send _destination :deserialize buf ptr-) (incf ptr- (send _destination :serialization-length))
   ;; uint32 _order
     (setq _order (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get actionlib_tutorials::FibonacciGoal :md5sum-) "945a608169e58de4791dd58bf822705a")
(setf (get actionlib_tutorials::FibonacciGoal :datatype-) "actionlib_tutorials/FibonacciGoal")
(setf (get actionlib_tutorials::FibonacciGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#goal definition

#Where to go
geometry_msgs/Point destination

#Who to call
uint32 order


================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

")



(provide :actionlib_tutorials/FibonacciGoal "945a608169e58de4791dd58bf822705a")


